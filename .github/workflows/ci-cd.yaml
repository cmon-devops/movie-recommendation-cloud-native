name: CI/CD Pipeline for Movie Recommendation App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract Docker metadata (tags)
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.ECR_REPOSITORY_URI }}
          tags: |
            latest  # Removed SHA tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: |
            ${{ secrets.ECR_REPOSITORY_URI }}:latest
            ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}



  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.21.0'

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-2 --name ml-api

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/movie-recommendation movie-recommendation=${{ secrets.ECR_REPOSITORY_URI }}:${{ steps.meta.outputs.version }}
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
